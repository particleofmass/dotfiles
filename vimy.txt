" VIM PLUG BEGIN ------------------------------------------------------

call plug#begin('~/.vim/plugged')
 
" auto formatter
Plug 'rhysd/vim-clang-format'
 
" nerd tree
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
 
" enhanced highlight
Plug 'octol/vim-cpp-enhanced-highlight'
 
" airline and airline theme  
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
 
" nerd commenter
Plug 'scrooloose/nerdcommenter'
 
" surround vim
Plug 'tpope/vim-surround'
"-----------------------------------------" 
" 
" vim find/replace highlight
 Plug 'osyo-manga/vim-over'
 Plug 'markonm/traces.vim'

" fugitive - git support
Plug 'tpope/vim-fugitive'
 
" ale - linter / autocompletion / formatter
Plug 'w0rp/ale'

" ctags indexer
Plug 'vim-scripts/DfrankUtil'
Plug 'vim-scripts/vimprj'
Plug 'vim-scripts/indexer.tar.gz'

" easy motion
Plug 'easymotion/vim-easymotion'

" A - for switching between source and header files
Plug 'vim-scripts/a.vim'

call plug#end()			
 
" VIM PLUG END ------------------------------------------------------
  
" ================ File management ==================
 
" Turn off swap files
set noswapfile
set nobackup
set nowb
set timeoutlen=0
set guicursor+=i:ver100-iCursor
set guicursor+=n-v-c:blinkon0
set cursorline
hi CursorLine ctermbg=16 gui=NONE term=NONE cterm=NONE
autocmd InsertEnter * highlight CursorLine ctermfg=None ctermbg=None
autocmd InsertLeave * highlight CursorLine ctermfg=None ctermbg=16
"use guifg and guibg instead of ctermfg and ctermbg in gvim 
hi SpellBad ctermfg='white' ctermbg=22 
hi SpellCap ctermfg='white' ctermbg=22
hi SignColumn ctermfg='white' ctermbg=16
hi Visual  ctermfg=16 ctermbg=5 gui=none 
" Visit the link below for more ctermbg colors
" https://vim.fandom.com/wiki/Xterm256_color_names_for_console_Vim
let g:airline_theme='kalisi'
 
" reload files changed outside vim
set autoread
" Triger `autoread` when files changes on disk
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI * if mode() != 'c' | checktime | endif
" Notification after file change
autocmd FileChangedShellPost *
  \ echohl WarningMsg | echo "File changed on disk. Buffer reloaded." | echohl None


" ================ Folds ============================

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ================ Encoding =========================

"set encoding to utf8
if &encoding != 'utf-8'
    set encoding=utf-8              "Necessary to show Unicode glyphs
endif


" ================ Key-bindings ================
  
" clipboard 
vmap <C-c> :<Esc>`>a<CR><Esc>mx`<i<CR><Esc>my'xk$v'y!xclip -selection c<CR>u
map <Insert> :set paste<CR>i<CR><CR><Esc>k:.!xclip -o<CR>JxkJx:set nopaste<CR>

" fast scrolling
nnoremap J 6j
nnoremap K 6k
vnoremap J 6j
vnoremap K 6k

nnoremap <C-k> 9j
nnoremap <C-k> 9k
vnoremap <C-k> 9j
vnoremap <C-k> 9k


" stay in normal mode after inserting a new line
noremap o o <Esc>
noremap O O <Esc>

" ================ Indentation ======================

set autoindent
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode 
set smartindent
filetype indent on 
set shiftwidth=4
set tabstop=4
set smarttab
set expandtab

" ================ Number column ====================

" To toggle numbering
 nmap <silent> <F10> :exec &nu==&rnu? "se nu!" : "se rnu!"<CR>

" ================ Searching ========================

" Ignorecase when searching
set ignorecase

" incremental search - Vim starts searching when we start typing
set incsearch

" When searching try to be smart about cases
set smartcase

" Highlight search results
set hlsearch

" toggle search highlighting
"nnoremap <F3> :set hlsearch!<CR>

" get rid of stuff highlighted before
" map <esc> :noh<cr>

" ================ Performance ======================

" fix slow scrolling that occurs when using mouse and relative numbers
set lazyredraw
" vim timeout (forgot why I need this or if I do at all)
set ttyfast
set ttimeoutlen=10

" ================ Misc =============================

" highlight matching braces
set showmatch

" How many tenths of a second to blink when matching brackets
set mat=0

" disable wrapping of long lines into multiple lines
" set nowrap

" history
set history=1000

" on some systems the backspace does not work as expected.
" this fixes the problem
set backspace=indent,eol,start

" ================ Plugins ==========================

" quit nerd tree on file open
let g:NERDTreeQuitOnOpen = 1

" show nerd tree always on the right instead on the left
let g:NERDTreeWinPos = "right"

" ################ Ale ##############################
 
" autocompletion
let g:ale_completion_enabled = 1

let g:ale_cpp_clang_executable = 'clang++-5.0'

" linter
 let g:ale_linters = {
            \   'cpp': ['clang']
            \}
let g:ale_cpp_clang_options = '-std=c++1z -O0 -Wextra -Wall -Wpedantic -I /usr/include/eigen3'
 
" ################ Clang format #####################
 
" Clang format - auto formatting
 
" let g:clang_format#command = 'clang-format-11.1.0'
let g:clang_format#style_options = {
            \ "BreakBeforeBraces" : "Attach",
            \ "UseTab" : "Never",
            \ "IndentWidth" : 4,
            \ "ColumnLimit" : 100,
            \ "AccessModifierOffset" : -4,
            \ "AllowShortIfStatementsOnASingleLine" : "false",
            \ "AllowShortFunctionsOnASingleLine" : "false",
            \}

" shortcuts for autoformatting the entire file: Ctrl+j
inoremap <C-g> <Esc>:ClangFormat<CR>a
nnoremap <C-g> <Esc>:ClangFormat<CR>

" ################ CTAGS ############################
" change the stack pop to a more comfortable mapping
nnoremap <C-e> <C-]>

" CTAGS indexer
let g:indexer_disableCtagsWarning = 1
  
" template / compile / run 
let extension = expand('%:e')
nnoremap <F7> :!cp ~/Desktop/templates/template.%:e %<Enter> 
nnoremap <F8> :w <bar> !clear && g++ -O2 -Wall -o  %:r.out % -std=c++17<Enter>
nnoremap <F9> :!clear && echo %:e > ~/.vim/vide/filetype.txt && echo %:t > ~/.vim/vide/tail.txt &&  echo %:p:h > ~/.vim/vide/head.txt && echo %:p > ~/.vim/vide/filepath.txt && python3 ~/.vim/vide/run.py<Enter>

" Nerdtree stuff 
" nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>
